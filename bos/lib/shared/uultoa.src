	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__u_ultoa
__u_ultoa:
	ld	hl, -22
	call	__frameset
	ld	a, (ix + 9)
	ld	(ix + -14), a
	ld	a, 65
	ld	(ix + -17), a
	xor	a, a
	ld	(ix + -21), a
	ld	iyl, 1
	ld	a, (___print_fmt+4)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	bc, 88
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB0_7
	ld	bc, 111
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_4
	ld	a, 8
	ld	(ix + -15), a
	xor	a, a
	ld	(ix + -22), a
	push	af
	ld	a, iyl
	ld	(ix + -21), a
	jq	BB0_8
BB0_4:
	ld	bc, 112
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB0_6
	ld	bc, 120
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_26
BB0_6:
	ld	a, (___print_fmt+1)
	and	a, 32
	xor	a, 97
	ld	(ix + -17), a
BB0_7:
	ld	a, 16
	ld	(ix + -15), a
	push	af
	ld	a, iyl
	ld	(ix + -22), a
BB0_8:
	pop	af
BB0_9:
	ld	de, (ix + 6)
	ld	a, (ix + -17)
	add	a, -10
	ld	(ix + -16), a
	or	a, a
	sbc	hl, hl
	ld	(ix + -3), hl
	ld	(ix + -20), de
	ex	de, hl
	ld	d, (ix + -14)
BB0_10:
	ld	iy, 0
	lea	bc, iy + 0
	ld	a, (ix + -15)
	ld	c, a
	xor	a, a
	push	hl
	pop	iy
	ld	e, d
	call	__ldivu
	ld	(ix + -6), hl
	ld	(ix + -7), e
	ld	(ix + -13), bc
	call	__lmulu
	push	hl
	pop	bc
	ld	a, e
	ld	(ix + -10), iy
	lea	hl, iy + 0
	ld	e, d
	call	__lsub
	push	hl
	pop	iy
	ld	bc, 10
	or	a, a
	sbc	hl, bc
	ld	a, (ix + -16)
	jq	nc, BB0_12
	ld	a, 48
BB0_12:
	ld	hl, ___print_buff
	ld	bc, (ix + -3)
	add	hl, bc
	add	a, iyl
	ld	(hl), a
	ld	hl, (ix + -10)
	ld	e, d
	ld	bc, (ix + -13)
	xor	a, a
	call	__lcmpu
	ld	a, 1
	jq	nc, BB0_14
	ld	a, 0
BB0_14:
	ld	hl, (ix + -3)
	inc	hl
	ld	(ix + -3), hl
	bit	0, a
	ld	hl, (ix + -6)
	ld	d, (ix + -7)
	jq	nz, BB0_10
	ld	a, (___print_fmt+6)
	ld	de, 0
	ld	e, a
	ld	bc, (ix + -3)
BB0_16:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB0_18
	ld	hl, ___print_buff
	add	hl, bc
	ld	(hl), 48
	inc	bc
	jq	BB0_16
BB0_18:
	ld	d, a
	ld	a, (___print_fmt+1)
	ld	iy, ___print_buff
	ld	(ix + -3), bc
	add	iy, bc
	ld	hl, (ix + -20)
	ld	e, (ix + -14)
	call	__lcmpzero
	jq	z, BB0_22
	ld	e, a
	bit	3, a
	jq	z, BB0_27
	ld	l, 1
	ld	a, (ix + -22)
	xor	a, l
	bit	0, a
	jq	nz, BB0_24
	ld	a, (ix + -17)
	add	a, 23
	ld	hl, ___print_buff
	ld	bc, (ix + -3)
	add	hl, bc
	ld	(hl), a
	push	hl
	pop	iy
	lea	bc, iy + 2
	ld	(iy + 1), 48
	push	bc
	pop	iy
	ld	a, (___print_fmt+6)
	jq	BB0_28
BB0_22:
	ld	e, a
BB0_27:
	ld	a, d
BB0_28:
	or	a, a
	jq	z, BB0_30
	ld	a, e
	and	a, -65
	ld	(___print_fmt+1), a
BB0_30:
	ld	(iy), 0
	ld	hl, ___print_buff
	push	hl
	call	__u_reverse
	pop	hl
	ld	hl, ___print_buff
	ld	(ix + 6), hl
	ld	sp, ix
	pop	ix
	jp	___print_sendstring
BB0_24:
	ld	a, (ix + -21)
	xor	a, l
	bit	0, a
	jq	nz, BB0_27
	ld	iy, ___print_buff
	ld	bc, (ix + -3)
	add	iy, bc
	ld	(iy), 48
	inc	iy
	jq	BB0_27
BB0_26:
	ld	a, 10
	ld	(ix + -15), a
	xor	a, a
	ld	(ix + -22), a
	jq	BB0_9
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project f1906007dd73cb37b01d5860b542715ee76f2492)"
	extern	__ldivu
	extern	__setflag
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__lmulu
	extern	__u_reverse
	extern	___print_fmt
	extern	__lsub
	extern	__lcmpzero
	extern	___print_buff
	extern	___print_sendstring
	extern	__lcmpu
