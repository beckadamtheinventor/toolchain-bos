	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__u_sscan
__u_sscan:
	ld	hl, -11
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix + -3), hl
	ld	iy, (ix + 9)
	ld	h, 0
	ld	l, 10
	ld	(iy + 1), 0
	ld	(iy + 5), 0
	ld	(iy + 6), 0
	ld	(iy + 2), 0
	ld	(iy + 4), 0
	ld	a, h
	ld	(ix + -9), a
	ld	(ix + -11), l
	ld	(ix + -10), h
	ld	c, h
BB0_1:
	ld	(ix + -7), c
	ld	iy, (ix + -3)
	ld	(ix + -6), iy
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix + -8), a
	ld	iyl, a
	ld	de, -37
	add	iy, de
	lea	hl, iy + 0
	ld	de, 84
	or	a, a
	sbc	hl, de
	ld	de, 8
	jq	nc, BB0_3
	lea	hl, iy + 0
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, L_switch.table._u_sscan
	add	hl, de
	ld	de, (hl)
BB0_3:
	ld	hl, (ix + -6)
	inc	hl
	ld	(ix + -3), hl
	or	a, a
	sbc	hl, hl
	ld	a, (ix + -7)
	ld	l, a
	ld	bc, 9
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _sscan_fsa
	add	hl, bc
	add	hl, de
	ld	e, (hl)
	ld	l, e
	rlc	l
	sbc	hl, hl
	ld	l, e
	ld	iyl, e
	ld	de, -2
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 12
	or	a, a
	sbc	hl, bc
	ld	c, iyl
	jq	nc, BB0_1
	ld	hl, LJTI0_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB0_5:
	ld	a, (ix + -9)
	or	a, 16
	ld	iy, (ix + 9)
	ld	(ix + -9), a
	ld	(iy + 1), a
	jq	BB0_1
BB0_6:
	ld	e, (ix + -11)
	ld	d, (ix + -10)
	ld	l, e
	ld	h, d
	mlt	hl
	ld	a, (ix + -8)
	add	a, -48
	add	a, l
	ld	d, a
	ld	iy, (ix + 9)
	ld	(ix + -11), e
	ld	(ix + -10), d
	ld	(iy + 5), d
	jq	BB0_1
BB0_7:
	ld	iy, (ix + 9)
	ld	a, (ix + -8)
	ld	(iy + 2), a
	jq	BB0_1
BB0_8:
	ld	iy, (ix + 9)
	ld	hl, (ix + -6)
	ld	(iy + 10), hl
	jq	BB0_1
BB0_9:
	cp	a, 6
	jq	z, BB0_1
	ld	a, (ix + -9)
	or	a, -128
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	ld	(ix + -9), a
	ld	(iy + 1), a
	ld	hl, (ix + -3)
	ld	(iy + 7), hl
	ld	iy, (ix + -6)
	ld	a, (iy + 1)
	cp	a, 94
	ld	a, 1
	jq	z, BB0_12
	ld	a, 0
BB0_12:
	bit	0, a
	ld	de, 2
	jq	nz, BB0_14
	ld	de, 1
BB0_14:
	bit	0, a
	jq	nz, BB0_17
	ld	iy, (ix + -6)
	jq	BB0_18
BB0_16:
	ld	iy, (ix + 9)
	ld	a, (ix + -8)
	ld	(iy + 4), a
	jq	BB0_1
BB0_17:
	ld	iy, (ix + -6)
	lea	hl, iy + 2
	ld	(ix + -3), hl
BB0_18:
	add	iy, de
	ld	a, (iy)
	cp	a, 93
	jq	nz, BB0_1
	ld	hl, (ix + -3)
	inc	hl
	ld	(ix + -3), hl
	jq	BB0_1
BB0_22:
	ld	hl, (ix + 9)
	ld	(hl), 1
	jq	BB0_24
BB0_23:
	ld	hl, (ix + 9)
	ld	(hl), 0
BB0_24:
	ld	hl, (ix + -6)
	jq	BB0_26
BB0_25:
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	ld	(iy), 2
	ld	a, (ix + -8)
	ld	(iy + 3), a
	ld	hl, (ix + -3)
BB0_26:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI0_0:
	private	LJTI0_0
LJTI0_0:
	dl	BB0_22
	dl	BB0_23
	dl	BB0_1
	dl	BB0_25
	dl	BB0_1
	dl	BB0_5
	dl	BB0_6
	dl	BB0_7
	dl	BB0_9
	dl	BB0_8
	dl	BB0_25
	dl	BB0_16

	section	.rodata,"a",@progbits
	private	_sscan_fsa
_sscan_fsa:
	db	"",002o,000o,001o,001o,001o,001o,001o,001o,001o
	db	9 dup 255
	db	"",010o,376o,003o,005o,004o,011o,006o,376o,376o
	db	"",376o,376o,376o,005o,004o,011o,006o,376o,376o
	db	"",376o,376o,376o,005o,004o,011o,006o,376o,376o
	db	"",376o,376o,376o,376o,376o,011o,006o,376o,376o
	db	"",006o,006o,006o,006o,006o,006o,006o,007o,006o
	db	9 dup 255
	db	9 dup 255
	db	9 dup 255

	section	.rodata,"a",@progbits
	private	L_switch.table._u_sscan
L_switch.table._u_sscan:
	dl	0
	dl	8
	dl	8
	dl	8
	dl	8
	dl	2
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	4
	dl	4
	dl	4
	dl	4
	dl	4
	dl	4
	dl	4
	dl	4
	dl	4
	dl	4
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	5
	dl	8
	dl	8
	dl	8
	dl	5
	dl	5
	dl	5
	dl	8
	dl	8
	dl	8
	dl	8
	dl	3
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	8
	dl	5
	dl	8
	dl	8
	dl	6
	dl	8
	dl	7
	dl	8
	dl	8
	dl	8
	dl	5
	dl	8
	dl	5
	dl	5
	dl	5
	dl	5
	dl	5
	dl	3
	dl	5
	dl	8
	dl	8
	dl	3
	dl	8
	dl	5
	dl	5
	dl	5
	dl	8
	dl	8
	dl	5
	dl	8
	dl	5
	dl	8
	dl	8
	dl	5

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project f1906007dd73cb37b01d5860b542715ee76f2492)"
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__imulu
