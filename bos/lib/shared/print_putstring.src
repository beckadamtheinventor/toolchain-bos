	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	___print_sendstring
___print_sendstring:
	ld	hl, -10
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix + -7), hl
	ld	d, 0
	ld	iyl, 0
	ld	l, 1
	ld	a, (___print_fmt+5)
	ld	e, a
	or	a, a
	jq	nz, BB0_2
	ld	(ix + -1), d
BB0_13:
	ex	de, hl
	ld	iyl, e
	ex	de, hl
	jq	BB0_14
BB0_2:
	ld	a, (___print_fmt+1)
	and	a, 1
	ld	l, a
	ld	a, e
	cp	a, 0
	call	__setflag
	jq	m, BB0_6
	ld	e, 1
	ld	a, l
	xor	a, e
	xor	a, e
	bit	0, a
	ld	(ix + -1), d
	jq	nz, BB0_14
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	push	hl
	pop	iy
	pop	hl
	ld	a, (___print_fmt+1)
	bit	4, a
	jq	z, BB0_8
	ld	c, 16
	lea	hl, iy + 0
	call	__ishl
	call	__ishrs
	push	hl
	pop	de
	ld	a, (___print_fmt+6)
	ld	c, a
	rlc	a
	sbc	hl, hl
	ld	l, c
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB0_9
BB0_8:
	ld	c, iyl
BB0_9:
	ld	d, 0
	ld	l, 1
	ld	a, (___print_fmt+5)
	sub	a, c
	ld	c, a
	ld	e, d
	jq	BB0_10
BB0_6:
	ld	(ix + -1), d
BB0_14:
	ld	bc, 65535
	ld	a, (___print_fmt+1)
	bit	4, a
	jq	nz, BB0_16
	ld	(ix + -4), bc
	jq	BB0_17
BB0_16:
	ld	a, (___print_fmt+6)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	call	__iand
	ld	(ix + -4), hl
BB0_17:
	ld.sis	bc, 0
BB0_18:
	or	a, a
	sbc	hl, hl
	ld	(ix + -9), c
	ld	(ix + -8), b
	ld	l, c
	ld	h, b
	ld	bc, (ix + -4)
	or	a, a
	sbc	hl, bc
	jq	nc, BB0_21
	ld	hl, (ix + -7)
	ld	l, (hl)
	ld	a, l
	or	a, a
	jq	z, BB0_21
	ld	de, (ix + -7)
	inc	de
	ld	(ix + -7), de
	push	hl
	push	af
	ld	a, iyl
	ld	(ix + -10), a
	pop	af
	call	___print_putch
	push	af
	ld	a, (ix + -10)
	ld	iyl, a
	pop	af
	ld	d, 0
	pop	hl
	ld	c, (ix + -9)
	ld	b, (ix + -8)
	inc.sis	bc
	ld	a, (ix + -1)
	inc	a
	ld	(ix + -1), a
	jq	BB0_18
BB0_21:
	ld	a, iyl
	bit	0, a
	jq	z, BB0_23
	push	af
	ld	a, (ix + -1)
	ld	iyl, a
	pop	af
	jq	BB0_27
BB0_23:
	ld	a, (___print_fmt+5)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_abs
	pop	de
	ld	a, l
	ld	(___print_fmt+5), a
	push	af
	ld	a, (ix + -1)
	ld	iyl, a
	pop	af
	ld	de, 0
BB0_24:
	ld	e, iyl
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, a
	ex	de, hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB0_26
	ld	hl, 32
	push	hl
	push	af
	ld	a, iyl
	ld	(ix + -1), a
	pop	af
	call	___print_putch
	push	af
	ld	a, (ix + -1)
	ld	iyl, a
	pop	af
	pop	hl
	inc	iyl
	ld	a, (___print_fmt+5)
	ld	de, 0
	jq	BB0_24
BB0_26:
	ld	d, 0
BB0_27:
	ld	a, (___print_len)
	add	a, iyl
	ld	(___print_len), a
	ld	a, d
	ld	(___print_fmt+1), a
	ld	(___print_fmt+6), a
	ld	(___print_fmt+5), a
	ld	sp, ix
	pop	ix
	ret
BB0_11:
	ld	hl, 32
	push	hl
	ld	(ix + -1), e
	ld	(ix + -4), c
	call	___print_putch
	ld	c, (ix + -4)
	ld	e, (ix + -1)
	ld	d, 0
	pop	hl
	ld	l, 1
	dec	e
BB0_10:
	ld	a, c
	add	a, e
	cp	a, 1
	call	__setflag
	jq	p, BB0_11
	ld	a, e
	neg
	ld	(ix + -1), a
	jq	BB0_13
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project f1906007dd73cb37b01d5860b542715ee76f2492)"
	extern	__setflag
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__iand
	extern	___print_len
	extern	___print_fmt
	extern	_abs
	extern	__ishrs
	extern	__ishl
	extern	_strlen
	extern	___print_putch
