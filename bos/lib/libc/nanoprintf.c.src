	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_npf_vpprintf
_npf_vpprintf:
	ld	hl, -140
	call	__frameset
	ld	iy, (ix + 12)
	ld	hl, (ix + 15)
	ld	(ix - 72), hl
	xor	a, a
	or	a, a
	sbc	hl, hl
	lea	bc, ix - 10
	ld	(ix - 97), bc
	lea	bc, ix - 14
	ld	(ix - 100), bc
	lea	bc, ix - 18
	ld	(ix - 91), bc
	lea	bc, ix - 22
	ld	(ix - 94), bc
	lea	bc, ix - 54
	ld	(ix - 78), bc
	ld	c, a
	ld	e, 10
	ld	(ix - 88), de
	ld	(ix - 57), hl
BB0_1:
	ld	d, (iy)
	ld	a, d
	or	a, a
	jp	z, BB0_333
	ld	a, d
	cp	a, 37
	ld	l, c
	ld	h, c
	ld	a, 1
	ld	(ix - 66), a
	ld	a, c
	ld	e, c
	ld	(ix - 60), iy
	jp	nz, BB0_22
BB0_3:
	ld	(ix - 114), a
	ld	(ix - 105), d
	ld	(ix - 115), c
BB0_4:
	ld	(ix - 75), h
	ld	(ix - 85), l
	lea	iy, iy + 2
BB0_5:
	ld	d, (iy - 1)
	ld	a, d
	or	a, a
	lea	hl, iy
	ld	iy, 0
	lea	bc, iy
	jp	z, BB0_28
	ld	(ix - 63), hl
	ld	a, d
	rlc	a
	sbc	hl, hl
	ld	l, d
	ld	(ix - 81), hl
	ld	bc, 32
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_13
	ld	a, e
	or	a, a
	ld	l, -1
	ld	c, (ix - 75)
	jr	z, BB0_9
	ld	l, 0
BB0_9:
	bit	0, l
	ld	a, 32
	jr	nz, BB0_11
	ld	a, c
BB0_11:
	bit	0, l
	ld	l, 32
	jr	nz, BB0_15
	ld	l, e
	jr	BB0_15
BB0_13:
	ld	iy, (ix - 63)
	dec	iy
	ld	hl, (ix - 81)
	ld	bc, 35
	or	a, a
	sbc	hl, bc
	jr	z, BB0_16
	ld	hl, (ix - 81)
	ld	bc, 43
	or	a, a
	sbc	hl, bc
	ld	l, 43
	ld	a, l
	jr	nz, BB0_18
BB0_15:
	ld	iy, (ix - 63)
	inc	iy
	ld	(ix - 75), a
	ld	e, l
	jr	BB0_5
BB0_16:
	ld	a, 35
	ld	l, a
BB0_17:
	ld	h, (ix - 75)
	jr	BB0_4
BB0_18:
	ld	hl, (ix - 81)
	ld	bc, 45
	or	a, a
	sbc	hl, bc
	jr	z, BB0_21
	ld	hl, (ix - 81)
	ld	bc, 48
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_23
	ld	a, (ix - 66)
	ld	(ix - 115), a
	ld	l, (ix - 85)
	jr	BB0_17
BB0_21:
	ld	iy, (ix - 63)
	dec	iy
	ld	d, 0
	ld	c, d
	ld	(ix - 66), c
	ld	a, 45
	ld	l, (ix - 85)
	ld	h, (ix - 75)
	ld	d, (ix - 105)
	jp	BB0_3
BB0_22:
	ld	iy, (ix - 60)
	jp	BB0_74
BB0_23:
	ld	a, d
	cp	a, 42
	ld	iy, 0
	lea	bc, iy
	ld	hl, (ix - 63)
	jr	nz, BB0_28
	ld	d, (hl)
	ld	hl, 2
BB0_25:
	ld	a, d
	cp	a, 46
	ld	(ix - 84), hl
	jr	nz, BB0_31
	ld	iy, (ix - 63)
	ld	a, (iy + 1)
	cp	a, 42
	jr	nz, BB0_32
	lea	hl, iy + 2
	ld	(ix - 66), hl
	ld	d, (iy + 2)
	ld	(ix - 111), bc
	ld	hl, 2
	ld	(ix - 81), hl
	jp	BB0_39
BB0_28:
	dec	hl
	ld	(ix - 63), hl
	push	bc
	pop	hl
	ld	(ix - 69), bc
BB0_29:
	ld	a, d
	add	a, -48
	cp	a, 10
	jr	nc, BB0_25
	ld	hl, (ix - 69)
	push	bc
	pop	iy
	ld	bc, 10
	call	__imulu
	ld	bc, 0
	ld	c, d
	ld	de, -48
	add	hl, de
	add	hl, bc
	lea	bc, iy
	ld	(ix - 69), hl
	ld	iy, (ix - 63)
	ld	d, (iy + 1)
	inc	iy
	ld	(ix - 63), iy
	ld	hl, 1
	jr	BB0_29
BB0_31:
	ld	(ix - 111), bc
	ld	(ix - 81), bc
	ld	hl, (ix - 63)
	ld	(ix - 66), hl
	jr	BB0_39
BB0_32:
	cp	a, 45
	jr	nz, BB0_34
	ld	iy, (ix - 63)
	lea	iy, iy + 2
	lea	de, iy
	ld	(ix - 81), bc
	jr	BB0_35
BB0_34:
	ld	de, (ix - 63)
	inc	de
	ld	hl, 1
	ld	(ix - 81), hl
BB0_35:
	push	bc
	pop	hl
	push	de
	pop	iy
BB0_36:
	ld	d, (iy)
	ld	a, d
	add	a, -48
	cp	a, 10
	jr	nc, BB0_38
	ld	bc, 0
	ld	c, d
	ld	(ix - 63), bc
	ld	bc, 10
	call	__imulu
	inc	iy
	ld	de, -48
	add	hl, de
	ld	de, (ix - 63)
	add	hl, de
	jr	BB0_36
BB0_38:
	ld	(ix - 111), hl
	ld	(ix - 66), iy
BB0_39:
	ld	a, d
	rlc	a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyl, d
	ld	de, -104
	add	iy, de
	lea	hl, iy
	ld	c, 23
	call	__ishl
	push	hl
	pop	de
	lea	hl, iy
	ld	c, 1
	call	__ishru
	push	hl
	pop	bc
	ex	de, hl
	call	__ior
	push	hl
	pop	de
	ld	bc, 10
	or	a, a
	sbc	hl, bc
	jr	c, BB0_41
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	iy, (ix - 66)
	jr	BB0_58
BB0_41:
	ld	iy, (ix - 66)
	lea	bc, iy
	inc	bc
	ld	hl, JTI0_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	ld	de, 0
	jp	(hl)
BB0_42:
	ld	a, (iy + 1)
	cp	a, 104
	ld	a, -1
	jr	z, BB0_44
	ld	a, 0
BB0_44:
	bit	0, a
	ld	hl, 2
	ex	de, hl
	jr	nz, BB0_52
	ld	hl, 1
	jr	BB0_51
BB0_46:
	ld	hl, 5
	jr	BB0_56
BB0_47:
	ld	a, (iy + 1)
	cp	a, 108
	ld	a, -1
	jr	z, BB0_49
	ld	a, 0
BB0_49:
	bit	0, a
	ld	hl, 4
	ex	de, hl
	jr	nz, BB0_52
	ld	hl, 3
BB0_51:
	ex	de, hl
BB0_52:
	bit	0, a
	jr	z, BB0_57
	ld	iy, (ix - 66)
	lea	iy, iy + 2
	jr	BB0_58
BB0_54:
	ld	hl, 7
	jr	BB0_56
BB0_55:
	ld	hl, 6
BB0_56:
	ex	de, hl
BB0_57:
	push	bc
	pop	iy
BB0_58:
	push	de
	pop	bc
	ld	(ix - 66), iy
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyl, a
	lea	hl, iy
	ld	de, 37
	or	a, a
	sbc	hl, de
	ld	(ix - 63), bc
	jr	nz, BB0_60
	or	a, a
	sbc	hl, hl
	ld	(ix - 81), hl
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	ld	e, 1
	ld	(ix - 102), e
	ld	(ix - 117), a
	ld	(ix - 120), a
	ld	(ix - 123), a
	ld	de, 10
	ld	(ix - 126), de
	ld	(ix - 108), hl
	ld	a, 32
	ld	c, a
	ld	iy, (ix - 60)
	jp	BB0_72
BB0_60:
	lea	hl, iy
	ld	de, 66
	or	a, a
	sbc	hl, de
	ld	a, 0
	jr	nz, BB0_63
	ld	c, a
	ld	iy, (ix - 60)
BB0_62:
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	ld	l, 1
	ld	(ix - 102), l
	ld	(ix - 117), l
	ld	(ix - 120), l
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	ld	hl, 4
	jr	BB0_71
BB0_63:
	lea	hl, iy
	ld	de, 70
	or	a, a
	sbc	hl, de
	jr	nz, BB0_68
	ld	c, a
	ld	iy, (ix - 60)
BB0_65:
	ld	hl, (ix - 81)
	ld	a, l
	or	a, a
	ld	hl, 6
	jr	z, BB0_67
	ld	hl, (ix - 111)
BB0_67:
	ld	(ix - 111), hl
	xor	a, a
	ld	(ix - 101), a
	ld	l, 1
	ld	b, l
	ld	(ix - 102), a
	ld	(ix - 117), a
	ld	(ix - 120), l
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	jr	BB0_71
BB0_68:
	lea	hl, iy
	ld	de, 88
	or	a, a
	sbc	hl, de
	jp	nz, BB0_161
	ld	c, a
	ld	iy, (ix - 60)
BB0_70:
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	ld	l, 1
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), l
	ld	(ix - 123), a
	ld	hl, 16
	ld	(ix - 126), hl
	ld	hl, 6
BB0_71:
	ld	(ix - 108), hl
BB0_72:
	ld	hl, (ix - 66)
	inc	hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_76
BB0_73:
	ld	d, (ix - 105)
BB0_74:
	ld	hl, (ix - 57)
	inc	hl
	ld	(ix - 57), hl
	inc	iy
	ld	(ix - 60), iy
	ld	a, d
	rlc	a
	sbc	hl, hl
	ld	l, d
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	iy, (ix - 60)
	pop	hl
	pop	hl
BB0_75:
	ld	d, 0
	ld	c, d
	jp	BB0_1
BB0_76:
	add	iy, de
	ld	hl, (ix - 84)
	ld	a, l
	cp	a, 2
	ld	(ix - 60), iy
	ld	(ix - 66), c
	jr	nz, BB0_84
	ld	iyl, b
	ld	hl, (ix - 72)
	ld	de, (hl)
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	a, -1
	jp	m, BB0_79
	ld	a, 0
BB0_79:
	push	de
	pop	hl
	call	__ineg
	ld	(ix - 69), hl
	bit	0, a
	ld	l, 1
	ld	(ix - 116), l
	jr	nz, BB0_81
	ld	l, (ix - 114)
	ld	(ix - 116), l
BB0_81:
	bit	0, a
	ld	b, iyl
	jr	nz, BB0_83
	ld	(ix - 69), de
BB0_83:
	ld	iy, (ix - 72)
	lea	iy, iy + 3
	ld	(ix - 72), iy
	ld	hl, 1
	ld	(ix - 84), hl
	ld	iy, (ix - 60)
	jr	BB0_85
BB0_84:
	ld	a, (ix - 114)
	ld	(ix - 116), a
BB0_85:
	ld	hl, (ix - 81)
	ld	a, l
	cp	a, 2
	ld	d, 0
	ld	c, d
	jr	nz, BB0_87
	ld	iy, (ix - 72)
	lea	hl, iy + 3
	ld	(ix - 114), hl
	ld	hl, (iy)
	ld	(ix - 105), hl
	call	__inot
	ld	a, c
	ld	c, 23
	call	__ishru
	ld	c, a
	ld	(ix - 81), hl
	jr	BB0_88
BB0_87:
	ld	hl, (ix - 111)
	ld	(ix - 105), hl
	ld	hl, (ix - 72)
	ld	(ix - 114), hl
BB0_88:
	ld	l, 0
	ld	de, (ix - 108)
	ld	a, e
	cp	a, 11
	ld	(ix - 127), b
	jp	c, BB0_133
	ld	iy, 0
	ld	(ix - 75), iy
	ld	(ix - 111), c
	ld	(ix - 63), iy
	ld	(ix - 66), iy
BB0_90:
	ld	c, l
	ld	(ix - 123), l
	ld	de, (ix - 78)
	ld	(ix - 108), de
	ld	de, (ix - 114)
	ld	(ix - 72), de
BB0_91:
	ld	de, (ix - 84)
	ld	a, e
	cp	a, 1
	ld	a, 1
	ld	(ix - 84), a
	ld	(ix - 126), l
	ld	(ix - 114), iy
	lea	de, iy
	jr	nz, BB0_103
	ld	a, (ix - 115)
	xor	a, 1
	bit	0, a
	ld	(ix - 84), l
	ld	(ix - 126), l
	ld	a, 1
	ld	hl, 32
	ld	(ix - 114), hl
	ld	l, 0
	jr	nz, BB0_103
	ld	a, (ix - 120)
	xor	a, 1
	bit	0, a
	ld	a, 1
	ld	(ix - 84), a
	ld	(ix - 126), l
	ld	(ix - 114), de
	jr	nz, BB0_103
	ld	hl, (ix - 105)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, -1
	jr	z, BB0_96
	ld	l, 0
BB0_96:
	ld	de, (ix - 81)
	ld	a, e
	cp	a, 1
	jr	z, BB0_98
	ld	l, 0
BB0_98:
	bit	0, l
	jr	nz, BB0_100
	ld	c, 0
BB0_100:
	ld	a, c
	xor	a, 1
	ld	(ix - 126), a
	bit	0, c
	ld	hl, 32
	ld	(ix - 114), hl
	jr	nz, BB0_102
	ld	hl, 48
	ld	(ix - 114), hl
BB0_102:
	xor	a, a
	ld	(ix - 84), a
	ld	a, c
BB0_103:
	ld	(ix - 115), a
	ld	a, (ix - 101)
	ld	l, (ix - 123)
	or	a, l
	bit	0, b
	ld	de, (ix - 75)
	jr	nz, BB0_105
	ld	de, (ix - 63)
BB0_105:
	ld	hl, (ix - 105)
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB0_107
	lea	bc, iy
BB0_107:
	bit	0, a
	ld	e, (ix - 85)
	jr	nz, BB0_109
	push	bc
	pop	iy
BB0_109:
	ld	(ix - 75), iy
	ld	hl, (ix - 69)
	ld	bc, (ix - 63)
	or	a, a
	sbc	hl, bc
	ld	a, (ix - 111)
	or	a, a
	ld	bc, -1
	jr	nz, BB0_111
	ld	bc, 0
BB0_111:
	add	hl, bc
	push	hl
	pop	iy
	ld	bc, -2
	add	iy, bc
	ld	bc, (ix - 66)
	ld	a, c
	or	a, a
	jr	nz, BB0_113
	push	hl
	pop	iy
BB0_113:
	ld	hl, (ix - 105)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, -1
	jr	nz, BB0_115
	ld	a, 0
BB0_115:
	ld	l, (ix - 102)
	bit	0, l
	ld	l, 1
	jr	nz, BB0_117
	ld	l, a
BB0_117:
	ld	a, e
	or	a, a
	ld	c, -1
	jr	nz, BB0_119
	ld	c, 0
BB0_119:
	bit	0, l
	ld	a, 1
	jr	nz, BB0_121
	ld	a, c
BB0_121:
	xor	a, 1
	ld	l, a
	ld	bc, 1
	call	__iand
	push	hl
	pop	bc
	add	iy, bc
	lea	hl, iy
	ld	bc, (ix - 75)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB0_123
	ld	bc, 0
BB0_123:
	ld	(ix - 81), bc
	ld	a, (ix - 84)
	bit	0, a
	ld	iy, (ix - 60)
	ld	c, 0
	jr	nz, BB0_125
	ld	a, (ix - 116)
	or	a, a
	jp	z, BB0_143
BB0_125:
	ld	hl, (ix - 66)
	ld	a, l
	or	a, a
	jr	z, BB0_127
BB0_126:
	ld	(ix - 66), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 48
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
	ld	de, 2
	ld	hl, (ix - 57)
	add	hl, de
	ld	(ix - 57), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 66)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	ld	c, d
	ld	iy, (ix - 60)
	pop	hl
	pop	hl
BB0_127:
	ld	a, (ix - 101)
	xor	a, 1
	bit	0, a
	jp	nz, BB0_135
	ld	bc, (ix - 63)
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB0_130
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB0_130:
	push	bc
	pop	de
BB0_131:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB0_141
	ld	hl, (ix - 108)
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	(ix - 66), de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	ld	(ix - 63), bc
	call	__indcallhl
	ld	de, (ix - 66)
	ld	bc, (ix - 63)
	ld	iy, (ix - 60)
	pop	hl
	pop	hl
	dec	de
	ld	hl, (ix - 108)
	inc	hl
	ld	(ix - 108), hl
	jr	BB0_131
BB0_133:
	ld	hl, JTI0_2
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	ld	iy, (ix - 114)
	lea	de, iy + 3
	ld	iy, 0
	jp	(hl)
BB0_134:
	ld	(ix - 54), 37
	ld	(ix - 75), iy
	ld	(ix - 111), c
	ld	hl, 1
	ld	(ix - 63), hl
	ld	(ix - 66), iy
	ld	l, 0
	jp	BB0_90
BB0_135:
	ld	e, (ix - 111)
	ld	a, e
	or	a, a
	jr	z, BB0_137
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	de, (ix - 57)
	inc	de
	ld	(ix - 57), de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	ld	c, d
	pop	hl
	pop	hl
BB0_137:
	ld	hl, (ix - 57)
	ld	(ix - 66), hl
	ld	a, (ix - 85)
	ld	l, (ix - 127)
	bit	0, l
	jp	z, BB0_152
	ld	hl, (ix - 105)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_140
	or	a, a
	jp	z, BB0_185
BB0_140:
	ld	hl, (ix - 63)
	jp	BB0_186
BB0_141:
	ld	hl, (ix - 57)
	add	hl, bc
	ld	(ix - 57), hl
BB0_142:
	ld	d, 0
	ld	c, d
	jp	BB0_197
BB0_143:
	ld	a, (ix - 126)
	xor	a, 1
	bit	0, a
	jr	nz, BB0_149
	ld	e, (ix - 111)
	ld	a, e
	or	a, a
	jr	z, BB0_146
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	de, (ix - 57)
	inc	de
	ld	(ix - 57), de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
BB0_146:
	ld	hl, (ix - 66)
	ld	a, l
	or	a, a
	jr	z, BB0_148
	ld	(ix - 66), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 48
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
	ld	de, 2
	ld	hl, (ix - 57)
	add	hl, de
	ld	(ix - 57), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 66)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
BB0_148:
	ld	d, 0
	ld	c, d
	ld	(ix - 111), c
	ld	iy, (ix - 60)
BB0_149:
	ld	hl, (ix - 81)
BB0_150:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_155
	dec	hl
	ld	(ix - 120), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 114)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	ld	c, d
	ld	hl, (ix - 120)
	ld	iy, (ix - 60)
	pop	de
	pop	de
	jr	BB0_150
BB0_152:
	ld	iy, (ix - 75)
BB0_153:
	lea	hl, iy
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_160
	dec	iy
	ld	(ix - 57), iy
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 48
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	iy, (ix - 57)
	ld	d, 0
	ld	c, d
	pop	hl
	pop	hl
	jr	BB0_153
BB0_155:
	ld	hl, (ix - 57)
	ld	de, (ix - 81)
	add	hl, de
	ld	(ix - 57), hl
	ld	hl, (ix - 66)
	ld	a, l
	or	a, a
	ld	a, -1
	jr	nz, BB0_157
	ld	a, 0
BB0_157:
	ld	l, (ix - 115)
	bit	0, l
	jr	nz, BB0_159
	xor	a, a
BB0_159:
	bit	0, a
	ld	hl, -1
	ld	(ix - 81), hl
	ld	hl, (ix - 66)
	jp	nz, BB0_126
	jp	BB0_127
BB0_160:
	ld	hl, (ix - 75)
	ld	de, (ix - 66)
	add	hl, de
	ld	(ix - 66), hl
	ld	hl, (ix - 63)
	ld	(ix - 57), hl
	scf
	sbc	hl, hl
	ld	(ix - 75), hl
	jp	BB0_187
BB0_161:
	ld	de, -98
	add	iy, de
	lea	de, iy
	push	de
	pop	hl
	ld	bc, 23
	or	a, a
	sbc	hl, bc
	jr	c, BB0_163
	ld	iy, (ix - 60)
	jp	BB0_73
BB0_163:
	ld	hl, JTI0_1
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	ld	a, 32
	ld	c, a
	ld	iy, (ix - 60)
	ld	d, (ix - 105)
	jp	(hl)
BB0_164:
	or	a, a
	sbc	hl, hl
	ld	(ix - 81), hl
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	inc	l
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), a
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	ld	hl, 1
	jp	BB0_302
BB0_165:
	ld	hl, (ix - 114)
	ld	hl, (hl)
	ld	(ix - 72), de
	lea	de, iy
	ld	iy, (ix - 72)
	ld	(ix - 108), hl
BB0_166:
	add	hl, de
	ld	a, (hl)
	or	a, a
	jr	z, BB0_172
	inc	de
	ld	hl, (ix - 108)
	jr	BB0_166
BB0_168:
	ld	hl, JTI0_5
	ld	de, (ix - 63)
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB0_169:
	ld	iy, (ix - 114)
	lea	hl, iy + 3
	ld	(ix - 72), hl
	ld	de, (iy)
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	jp	BB0_258
BB0_170:
	ld	iy, (ix - 114)
	lea	bc, iy + 9
	ld	hl, JTI0_4
	ld	de, (ix - 63)
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB0_171:
	lea	hl, iy + 3
	ld	(ix - 72), hl
	ld	hl, (iy)
	ld	bc, 65535
	jp	BB0_228
BB0_172:
	ld	hl, (ix - 81)
	ld	a, l
	cp	a, 1
	jp	nz, BB0_211
	ld	iy, (ix - 105)
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	(ix - 63), iy
	jp	m, BB0_175
	ld	(ix - 63), de
BB0_175:
	ld	iy, 0
	ld	(ix - 75), iy
	ld	d, 0
	ld	(ix - 111), d
	jp	BB0_212
BB0_176:
	ld	hl, (ix - 114)
	ld	a, (hl)
	ld	(ix - 54), a
	ld	(ix - 75), iy
	ld	(ix - 111), c
	ld	hl, 1
	ld	(ix - 63), hl
	ld	(ix - 66), iy
	ld	l, 0
	ld	c, l
	ld	(ix - 123), l
	ld	(ix - 72), de
	jp	BB0_252
BB0_177:
	ld	hl, (ix - 114)
	ld	hl, (hl)
	ld	(ix - 72), de
	ld	de, 0
	ld	bc, 32
	push	bc
	ld	bc, 16
	push	bc
	push	de
	push	de
	push	hl
	ld	hl, (ix - 78)
	push	hl
	call	_npf_utoa_rev
	ld	iy, 0
	ld	d, 0
	ld	(ix - 63), hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	(ix - 75), iy
	ld	(ix - 111), d
	ld	hl, 120
	ld	(ix - 66), hl
	ld	l, 0
	ld	c, l
	jp	BB0_283
BB0_178:
	ld	(ix - 72), de
	ld	hl, JTI0_3
	ld	de, (ix - 63)
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB0_179:
	ld	hl, (ix - 114)
	ld	hl, (hl)
	ld	a, c
	ld	bc, (ix - 57)
	ld	(hl), bc
	jp	BB0_245
BB0_180:
	ld	iy, (ix - 114)
	lea	hl, iy
	ld	hl, (hl)
	ld	e, (iy + 3)
	ld	(ix - 63), hl
	ld	a, c
	ld	(ix - 108), e
	ld	bc, 0
	call	__fcmp
	ld	a, 45
	jp	m, BB0_182
	ld	a, (ix - 75)
BB0_182:
	ld	(ix - 111), a
	ld	iy, (ix - 114)
	lea	iy, iy + 6
	ld	hl, (ix - 63)
	ld	(ix - 18), hl
	ld	a, (ix - 108)
	ld	(ix - 15), a
	ld	de, 0
BB0_183:
	push	de
	pop	hl
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jp	z, BB0_205
	ld	hl, (ix - 91)
	add	hl, de
	ld	a, (hl)
	ld	hl, (ix - 94)
	add	hl, de
	ld	(hl), a
	inc	de
	jr	BB0_183
BB0_185:
	ld	hl, (ix - 108)
	inc	hl
	ld	(ix - 108), hl
	ld	hl, (ix - 63)
	dec	hl
BB0_186:
	ld	(ix - 57), hl
BB0_187:
	ld	a, (ix - 117)
	bit	0, a
	jp	z, BB0_191
	ld	iy, (ix - 57)
BB0_189:
	dec	iy
	lea	hl, iy
	ld	de, -1
	or	a, a
	sbc	hl, de
	jp	z, BB0_193
	ld	hl, (ix - 54)
	ld	de, (ix - 51)
	ld	bc, (ix - 48)
	push	iy
	call	__llshru
	pop	de
	ld	bc, 1
	call	__iand
	ld	de, 48
	add	hl, de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	ld	(ix - 63), iy
	call	__indcallhl
	ld	iy, (ix - 63)
	ld	d, 0
	ld	c, d
	pop	hl
	pop	hl
	jp	BB0_189
BB0_191:
	ld	hl, (ix - 57)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_194
	ld	iy, (ix - 108)
	ld	de, (ix - 57)
	add	iy, de
	ld	a, (iy - 1)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	de, (ix - 66)
	inc	de
	ld	(ix - 66), de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	ld	c, d
	pop	hl
	pop	hl
	ld	hl, (ix - 57)
	dec	hl
	ld	(ix - 57), hl
	jr	BB0_191
BB0_193:
	ld	hl, (ix - 57)
	ld	de, (ix - 66)
	add	hl, de
	jr	BB0_195
BB0_194:
	ld	hl, (ix - 66)
BB0_195:
	ld	(ix - 57), hl
	ld	iy, (ix - 60)
	ld	a, (ix - 102)
	bit	0, a
	ld	hl, (ix - 75)
	jr	nz, BB0_197
	ld	a, (ix - 123)
	bit	0, a
	jr	z, BB0_202
BB0_197:
	ld	a, (ix - 116)
	or	a, a
	jp	z, BB0_1
	ld	a, (ix - 84)
	bit	0, a
	jp	nz, BB0_1
	ld	bc, (ix - 81)
BB0_200:
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_204
	dec	bc
	ld	(ix - 81), bc
	ld	hl, (ix - 57)
	inc	hl
	ld	(ix - 57), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 114)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	bc, (ix - 81)
	pop	hl
	pop	hl
	jr	BB0_200
BB0_202:
	push	hl
	pop	bc
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_142
	dec	bc
	ld	(ix - 75), bc
	ld	hl, (ix - 57)
	inc	hl
	ld	(ix - 57), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 48
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	iy, (ix - 60)
	pop	hl
	pop	hl
	ld	hl, (ix - 75)
	jr	BB0_202
BB0_204:
	ld	iy, (ix - 60)
	jp	BB0_75
BB0_205:
	ld	(ix - 72), iy
	ld	hl, (ix - 63)
	ld	e, (ix - 108)
	ld	bc, 0
	xor	a, a
	call	__fcmp
	ld	a, 1
	jr	z, BB0_207
	ld	a, 0
BB0_207:
	ld	(ix - 128), a
	ld	iy, (ix - 22)
	ld	d, (ix - 19)
	lea	hl, iy
	ld	e, d
	ld	bc, -8388608
	ld	a, 127
	call	__land
	call	__lcmpu
	jr	nz, BB0_214
	lea	hl, iy
	ld	e, d
	ld	bc, 8388607
	xor	a, a
	call	__land
	call	__lcmpzero
	ld	iy, 0
	lea	bc, iy
	push	bc
	pop	de
	jr	nz, BB0_217
BB0_209:
	push	bc
	pop	hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	jp	z, BB0_223
	ld	hl, _.str.1
	add	hl, bc
	ld	a, (hl)
	ld	l, (ix - 66)
	add	a, l
	ld	hl, (ix - 78)
	add	hl, bc
	ld	(hl), a
	inc	bc
	jr	BB0_209
BB0_211:
	ld	iy, 0
	ld	(ix - 75), iy
	xor	a, a
	ld	(ix - 111), a
	ld	(ix - 63), de
BB0_212:
	ld	(ix - 66), iy
	ld	l, 0
	ld	c, l
BB0_213:
	ld	(ix - 123), l
	jp	BB0_91
BB0_214:
	ld	hl, (ix - 63)
	ld	(ix - 10), hl
	ld	a, (ix - 108)
	ld	(ix - 7), a
	ld	de, 0
BB0_215:
	push	de
	pop	hl
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jr	z, BB0_219
	ld	hl, (ix - 97)
	add	hl, de
	ld	a, (hl)
	ld	hl, (ix - 100)
	add	hl, de
	ld	(hl), a
	inc	de
	jr	BB0_215
BB0_217:
	push	de
	pop	hl
	ld	bc, 3
	or	a, a
	sbc	hl, bc
	jr	z, BB0_223
	ld	hl, _.str
	add	hl, de
	ld	a, (hl)
	ld	l, (ix - 66)
	add	a, l
	ld	hl, (ix - 78)
	add	hl, de
	ld	(hl), a
	inc	de
	jr	BB0_217
BB0_219:
	ld	de, (ix - 14)
	ld	a, (ix - 11)
	push	de
	pop	bc
	ld	(ix - 63), a
	ld	l, 23
	call	__lshru
	push	bc
	pop	hl
	ld	bc, 255
	call	__iand
	push	hl
	pop	iy
	ld	bc, -150
	add	iy, bc
	ld	a, l
	cp	a, -65
	jr	c, BB0_225
	ld	iy, 0
	lea	de, iy
BB0_221:
	push	de
	pop	hl
	ld	bc, 3
	or	a, a
	sbc	hl, bc
	jr	z, BB0_223
	ld	hl, _.str.2
	add	hl, de
	ld	a, (hl)
	ld	l, (ix - 66)
	add	a, l
	ld	hl, (ix - 78)
	add	hl, de
	ld	(hl), a
	inc	de
	jr	BB0_221
BB0_223:
	ld	de, -3
	ld	(ix - 75), iy
BB0_224:
	ex	de, hl
	call	__ineg
	ld	(ix - 63), hl
	ld	(ix - 66), iy
	ld	a, 1
	ld	(ix - 123), a
	ld	hl, (ix - 78)
	ld	(ix - 108), hl
	ld	l, 0
	jp	BB0_275
BB0_225:
	ld	(ix - 75), hl
	ex	de, hl
	ld	e, (ix - 63)
	ld	bc, 8388607
	xor	a, a
	call	__land
	inc	bc
	call	__ladd
	ld	bc, (ix - 75)
	ld	a, c
	cp	a, -105
	jp	c, BB0_294
	ld	bc, 0
	ld	c, e
	push	iy
	push	bc
	pop	de
	ld.sis	bc, 0
	call	__llshl
	ld	(ix - 3), bc
	ld	bc, -134
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	(ix - 108), de
	pop	hl
	ld	bc, (ix - 3)
	ld	l, c
	ld	h, b
	ld	de, 0
	push	de
	pop	iy
	ld	(ix - 66), de
	ld.sis	bc, 0
	jp	BB0_311
BB0_227:
	lea	hl, iy + 3
	ld	(ix - 72), hl
	ld	hl, (iy)
	ld	bc, 255
BB0_228:
	call	__iand
	jr	BB0_232
BB0_229:
	lea	hl, iy + 6
	ld	(ix - 72), hl
	ld	hl, (iy)
	ld	(ix - 75), hl
	ld	a, (iy + 3)
	ld	de, 0
	ld	e, a
	jr	BB0_233
BB0_230:
	ld	(ix - 72), bc
	lea	bc, iy
	push	bc
	pop	hl
	ld	hl, (hl)
	ld	(ix - 75), hl
	ld	de, (iy + 3)
	ld	bc, (iy + 6)
	jr	BB0_234
BB0_231:
	lea	hl, iy + 3
	ld	(ix - 72), hl
	ld	hl, (iy)
BB0_232:
	ld	(ix - 75), hl
	ld	de, 0
BB0_233:
	ld.sis	hl, 0
	ld	c, l
	ld	b, h
BB0_234:
	ld	hl, (ix - 75)
	ld	(ix - 111), de
	ld	(ix - 114), bc
	call	__llcmpzero
	jr	nz, BB0_237
	ld	hl, (ix - 81)
	ld	a, l
	cp	a, 1
	jr	nz, BB0_237
	ld	hl, (ix - 105)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB0_276
BB0_237:
	ld	hl, (ix - 108)
	ld	a, l
	cp	a, 4
	ld	bc, (ix - 78)
	jr	nz, BB0_241
	ld	iy, (ix - 75)
	lea	hl, iy
	ld	de, (ix - 111)
	ld	bc, (ix - 114)
	call	__llcmpzero
	ld	hl, 1
	jr	z, BB0_240
	lea	hl, iy
	ld	de, (ix - 111)
	call	__llctlz
	or	a, a
	sbc	hl, hl
	ld	(ix - 63), hl
	ld	hl, (ix - 63)
	ld	l, a
	ld	(ix - 63), hl
	ld	hl, 64
	ld	de, (ix - 63)
	sbc	hl, de
BB0_240:
	ld	(ix - 63), hl
	ld	(ix - 54), iy
	ld	de, (ix - 111)
	ld	(ix - 51), de
	ld	(ix - 48), c
	ld	(ix - 47), b
	jp	BB0_281
BB0_241:
	ld	a, l
	cp	a, 5
	ld	hl, 8
	jr	z, BB0_243
	ld	hl, (ix - 126)
BB0_243:
	ld	de, 0
	ld	a, (ix - 66)
	ld	e, a
	push	de
	push	hl
	ld	hl, (ix - 114)
	push	hl
	ld	hl, (ix - 111)
	push	hl
	ld	hl, (ix - 75)
	push	hl
	push	bc
	call	_npf_utoa_rev
	ld	bc, (ix - 114)
	ld	de, (ix - 111)
	ld	iy, (ix - 75)
	ld	(ix - 63), hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	jp	BB0_281
BB0_244:
	ld	hl, (ix - 114)
	ld	hl, (hl)
	ld	a, c
	ld	bc, (ix - 57)
	ld	(hl), c
	inc	hl
	ld	(hl), b
BB0_245:
	ld	b, (ix - 127)
	jr	BB0_250
BB0_246:
	ld	hl, (ix - 57)
	ld	a, l
	ld	hl, (ix - 114)
	ld	hl, (hl)
	ld	(hl), a
	ld	(ix - 75), iy
	ld	(ix - 111), c
	jr	BB0_251
BB0_247:
	ld	a, c
	ld	bc, (ix - 57)
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	e, l
	ld	hl, (ix - 114)
	ld	iy, (hl)
	ld	(iy), bc
	ld	b, (ix - 127)
	ld	(iy + 3), e
	jr	BB0_249
BB0_248:
	ld	a, c
	ld	bc, (ix - 57)
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	iy, (ix - 114)
	ld	iy, (iy)
	ld	(iy), bc
	ld	b, (ix - 127)
	ld	(iy + 3), hl
	ld	(iy + 6), l
	ld	(iy + 7), h
BB0_249:
	ld	iy, 0
BB0_250:
	ld	(ix - 75), iy
	ld	(ix - 111), a
BB0_251:
	ld	(ix - 63), iy
	ld	(ix - 66), iy
	ld	l, 0
	ld	c, l
	ld	(ix - 123), l
BB0_252:
	ld	de, (ix - 78)
	ld	(ix - 108), de
	jp	BB0_91
BB0_253:
	ld	iy, (ix - 114)
	lea	hl, iy + 3
	ld	(ix - 72), hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	jr	BB0_258
BB0_254:
	ld	iy, (ix - 114)
	lea	hl, iy + 6
	ld	(ix - 72), hl
	ld	hl, (iy)
	ld	(ix - 123), hl
	ld	a, (iy + 3)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	jr	BB0_259
BB0_255:
	ld	iy, (ix - 114)
	lea	hl, iy + 9
	lea	bc, iy
	ld	(ix - 72), hl
	push	bc
	pop	hl
	ld	hl, (hl)
	ld	(ix - 123), hl
	ld	de, (iy + 3)
	ld	bc, (iy + 6)
	jr	BB0_259
BB0_256:
	ld	iy, (ix - 114)
	lea	hl, iy + 3
	ld	(ix - 72), hl
	ld	hl, (iy)
	ld	(ix - 123), hl
	ld	de, 0
	ld.sis	hl, 0
	ld	c, l
	ld	b, h
	ld	a, (ix - 75)
	ld	(ix - 111), a
	jp	BB0_262
BB0_257:
	ld	iy, (ix - 114)
	lea	hl, iy + 3
	ld	(ix - 72), hl
	ld	hl, (iy)
BB0_258:
	ld	(ix - 123), hl
	push	hl
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	de
	ld	c, e
	ld	b, d
BB0_259:
	ld	hl, (ix - 123)
	ld	(ix - 114), de
	ld	(ix - 126), bc
	call	__llcmpzero
	ld	a, 45
	jp	m, BB0_261
	ld	a, (ix - 75)
BB0_261:
	ld	(ix - 111), a
	ld	de, (ix - 114)
	ld	bc, (ix - 126)
BB0_262:
	ld	hl, (ix - 123)
	ld	(ix - 114), de
	ld	(ix - 126), bc
	call	__llcmpzero
	ld	a, 1
	jr	z, BB0_264
	ld	a, 0
BB0_264:
	ld	(ix - 128), a
	ld	hl, (ix - 123)
	ld	de, (ix - 114)
	ld	bc, (ix - 126)
	call	__llcmpzero
	jr	nz, BB0_267
	ld	hl, (ix - 81)
	ld	a, l
	cp	a, 1
	jr	nz, BB0_267
	ld	hl, (ix - 105)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB0_293
BB0_267:
	ld	hl, (ix - 123)
	ld	(ix - 66), hl
	ld	de, (ix - 114)
	ld	(ix - 75), de
	ld	bc, (ix - 126)
	ld	l, c
	ld	h, b
	ld	(ix - 108), hl
	or	a, a
	sbc	hl, hl
	ld	(ix - 63), hl
BB0_268:
	push	bc
	push	de
	ld	hl, (ix - 123)
	push	hl
	ld	de, -1
	push	de
	pop	hl
	ld.sis	bc, -1
	call	__llcmps
	pop	hl
	pop	hl
	pop	hl
	call	pe, __setflag
	ld	a, 1
	jp	m, BB0_270
	ld	a, 0
BB0_270:
	ld	hl, (ix - 78)
	ld	de, (ix - 63)
	add	hl, de
	ld	bc, -140
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	iy, 0
	push	iy
	ld	hl, 10
	push	hl
	ld	hl, (ix - 66)
	ld	de, (ix - 75)
	ld	bc, (ix - 108)
	call	__lldivs
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 10
	push	hl
	ld	(ix - 3), bc
	ld	bc, -131
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy
	ld	bc, -134
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -137
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	de, (ix - 3)
	call	__llmulu
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 66)
	ld	de, (ix - 75)
	ld	bc, (ix - 108)
	call	__llsub
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	lea	hl, iy
	call	__llneg
	bit	0, a
	jr	nz, BB0_272
	push	hl
	pop	iy
BB0_272:
	ld	a, iyl
	add	a, 48
	ld	bc, -140
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), a
	ld	hl, (ix - 63)
	inc	hl
	ld	(ix - 63), hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 9
	push	hl
	ld	hl, (ix - 66)
	ld	de, (ix - 75)
	ld	bc, (ix - 108)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, 19
	push	iy
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	ccf
	sbc	a, a
	inc	a
	bit	0, a
	ld	(ix - 3), bc
	ld	bc, -131
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	ld	(ix - 66), hl
	ld	bc, -134
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	ld	(ix - 75), hl
	ld	bc, -137
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	ld	(ix - 108), hl
	ld	de, (ix - 114)
	ld	bc, (ix - 3)
	ld	bc, (ix - 126)
	jp	z, BB0_268
	ld	iy, 0
	ld	(ix - 75), iy
BB0_274:
	ld	(ix - 66), iy
	ld	l, 0
	ld	(ix - 123), l
	ld	de, (ix - 78)
	ld	(ix - 108), de
BB0_275:
	ld	b, (ix - 127)
	ld	c, (ix - 128)
	jp	BB0_91
BB0_276:
	ld	a, (ix - 85)
	or	a, a
	ld	a, -1
	ld	l, a
	jr	nz, BB0_278
	ld	a, 0
	ld	l, a
BB0_278:
	ld	a, (ix - 123)
	bit	0, a
	ld	de, 0
	jr	nz, BB0_280
	xor	a, a
	ld	l, a
BB0_280:
	ld	bc, 1
	call	__iand
	ld	(ix - 105), hl
	ld	(ix - 63), de
	ld	iy, (ix - 75)
	ld	de, (ix - 111)
	ld	bc, (ix - 114)
BB0_281:
	lea	hl, iy
	call	__llcmpzero
	jr	nz, BB0_284
	ld	iy, 0
	ld	(ix - 75), iy
	ld	d, 0
	ld	(ix - 111), d
	ld	(ix - 66), iy
	ld	c, 1
	ld	l, 0
BB0_283:
	ld	(ix - 123), l
	ld	de, (ix - 78)
	ld	(ix - 108), de
	jp	BB0_306
BB0_284:
	ld	a, (ix - 85)
	or	a, a
	ld	l, 0
	ld	bc, (ix - 78)
	jr	z, BB0_287
	ld	a, (ix - 123)
	xor	a, 1
	bit	0, a
	jr	nz, BB0_287
	push	bc
	pop	hl
	ld	de, (ix - 63)
	add	hl, de
	inc	de
	ld	(ix - 63), de
	ld	(hl), 48
	ld	iy, 0
	jr	BB0_289
BB0_287:
	ld	a, (ix - 85)
	or	a, a
	ld	iy, 0
	jr	nz, BB0_289
	ld	(ix - 75), iy
	xor	a, a
	ld	(ix - 111), a
	ld	(ix - 66), iy
	jp	BB0_305
BB0_289:
	ld	hl, (ix - 108)
	ld	a, l
	cp	a, 4
	jr	nz, BB0_291
	ld	hl, 66
	jr	BB0_292
BB0_291:
	ld	a, l
	cp	a, 6
	ld	hl, 88
	jp	nz, BB0_303
BB0_292:
	ld	de, 0
	ld	a, (ix - 66)
	ld	e, a
	add	hl, de
	ld	(ix - 66), hl
	ld	d, 0
	ld	(ix - 75), iy
	ld	(ix - 111), d
	jp	BB0_304
BB0_293:
	ld	iy, 0
	ld	(ix - 105), iy
	ld	(ix - 75), iy
	ld	(ix - 63), iy
	jp	BB0_274
BB0_294:
	ld	a, c
	cp	a, -106
	jp	nz, BB0_307
	ld	a, e
	ld	de, 0
	ld	e, a
	ld	(ix - 108), de
	ld	de, -134
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld.sis	hl, 0
	ld	c, l
	ld	b, h
	ld	(ix - 63), bc
	ld	de, 0
	push	de
	pop	iy
	ld	(ix - 66), de
	ld	hl, (ix - 63)
	jp	BB0_311
BB0_296:
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	ld	l, 1
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), l
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	ld	hl, 3
	jp	BB0_302
BB0_297:
	or	a, a
	sbc	hl, hl
	ld	(ix - 81), hl
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	inc	l
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), l
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	dec	hl
	jp	BB0_302
BB0_298:
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	ld	l, 1
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), l
	ld	(ix - 123), l
	ld	hl, 10
	ld	(ix - 126), hl
	ld	hl, 5
	jr	BB0_302
BB0_299:
	or	a, a
	sbc	hl, hl
	ld	(ix - 81), hl
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	inc	l
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), l
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	ld	hl, 8
	jr	BB0_302
BB0_300:
	xor	a, a
	ld	(ix - 115), a
	ld	a, 1
	ld	l, a
	ld	(ix - 101), l
	xor	a, a
	ld	b, a
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), a
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	ld	hl, 2
	jr	BB0_302
BB0_301:
	xor	a, a
	ld	(ix - 101), a
	ld	b, a
	ld	l, 1
	ld	(ix - 102), l
	ld	(ix - 117), a
	ld	(ix - 120), l
	ld	(ix - 123), a
	ld	hl, 10
	ld	(ix - 126), hl
	ld	hl, 7
BB0_302:
	ld	(ix - 108), hl
	ld	a, 32
	ld	c, a
	jp	BB0_72
BB0_303:
	ld	(ix - 75), iy
	xor	a, a
	ld	(ix - 111), a
	ld	(ix - 66), iy
BB0_304:
	ld	l, 0
BB0_305:
	ld	a, l
	ld	(ix - 123), l
	ld	(ix - 108), bc
	ld	c, a
BB0_306:
	ld	b, (ix - 127)
	jp	BB0_91
BB0_307:
	ld	(ix - 63), hl
	ld	a, c
	cp	a, 127
	jr	nc, BB0_309
	lea	hl, iy
	ld	bc, -60
	or	a, a
	sbc	hl, bc
	ld	bc, 0
	ld	(ix - 3), de
	ld	de, -134
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	(hl), bc
	ld	(ix - 108), bc
	ld.sis	hl, 0
	push	bc
	pop	iy
	ld	de, (ix - 3)
	ld	a, e
	ld	(ix - 66), bc
	push	bc
	pop	de
	jr	nc, BB0_310
	jp	BB0_311
BB0_309:
	ld	hl, 150
	ld	bc, (ix - 75)
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 63)
	ld	a, e
	call	__lshru
	ld	(ix - 3), de
	ld	de, -134
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 108), hl
	ld	de, (ix - 3)
	ld	a, e
BB0_310:
	ld	bc, -90
	ld	hl, (ix - 75)
	add	hl, bc
	ld	bc, 0
	ld	c, a
	push	hl
	ld	hl, (ix - 63)
	push	bc
	pop	de
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	ld	iy, 4095
	push	iy
	ld	iy, -1
	push	iy
	push	iy
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, 10
	push	iy
	call	__llmulu
	push	hl
	pop	iy
	ld	(ix - 66), de
	pop	hl
	pop	hl
	pop	hl
	ld	de, 0
	ld.sis	hl, 0
BB0_311:
	ld	(ix - 63), hl
	ld	(ix - 126), de
	ld	de, (ix - 66)
BB0_312:
	ld	(ix - 114), iy
	scf
	sbc	hl, hl
	push	hl
	push	hl
	push	hl
	lea	hl, iy
	ld	(ix - 66), de
	ld	(ix - 75), bc
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 4095
	push	iy
	ld	iy, -1
	push	iy
	push	iy
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	jr	nc, BB0_314
	ld	hl, (ix - 126)
	inc	hl
	ld	(ix - 126), hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, (ix - 114)
	ld	de, (ix - 66)
	ld	bc, (ix - 75)
	call	__llmulu
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	jr	BB0_312
BB0_314:
	ld	iy, 0
	ld	(ix - 123), iy
	ld	bc, -131
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	de, (ix - 66)
	ld	bc, (ix - 75)
BB0_315:
	ld	hl, (ix - 114)
	push	de
	pop	iy
	ld	(ix - 75), bc
	call	__llcmpzero
	jp	z, BB0_318
	ld	bc, -131
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, 8
	or	a, a
	sbc	hl, de
	jp	nc, BB0_318
	ld	hl, (ix - 123)
	ld	de, 10
	push	de
	pop	bc
	call	__imulu
	ld	(ix - 123), hl
	ld	hl, 60
	push	hl
	ld	hl, (ix - 114)
	ld	(ix - 66), iy
	lea	de, iy
	ld	iy, (ix - 75)
	ld	c, iyl
	ld	b, iyh
	call	__llshru
	push	hl
	pop	de
	pop	hl
	ld	hl, (ix - 123)
	add	hl, de
	ld	(ix - 123), hl
	ld	hl, 4095
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix - 114)
	ld	de, (ix - 66)
	ld	c, iyl
	ld	b, iyh
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, 10
	push	iy
	call	__llmulu
	ld	(ix - 114), hl
	pop	hl
	pop	hl
	pop	hl
	ld	(ix - 3), bc
	ld	bc, -131
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, (ix - 3)
	jp	BB0_315
BB0_318:
	or	a, a
	sbc	hl, hl
	ld	(ix - 66), hl
	ld	hl, (ix - 105)
	call	__ineg
	ld	(ix - 114), hl
	or	a, a
	sbc	hl, hl
	ld	(ix - 75), hl
	ld.sis	bc, 0
	ld	hl, (ix - 78)
	ld	de, -131
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	iy, (ix - 123)
BB0_319:
	lea	hl, iy
	ld	de, (ix - 66)
	call	__llcmpzero
	jr	z, BB0_321
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 10
	push	hl
	lea	hl, iy
	ld	de, (ix - 66)
	call	__lldivu
	ld	(ix - 66), de
	ld	(ix - 123), iy
	pop	iy
	pop	iy
	pop	iy
	ld	d, l
	push	hl
	pop	iy
	ld	hl, (ix - 88)
	ld	e, l
	mlt	de
	ld	hl, (ix - 123)
	ld	a, l
	sub	a, e
	or	a, 48
	ld	de, -131
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), a
	inc	hl
	push	ix
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	hl, (ix - 75)
	inc	hl
	ld	(ix - 75), hl
	ld	hl, (ix - 114)
	inc	hl
	ld	(ix - 114), hl
	jr	BB0_319
BB0_321:
	ld	iy, (ix - 78)
	ld	de, (ix - 126)
BB0_322:
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB0_324
	dec	de
	lea	hl, iy
	ld	bc, (ix - 75)
	add	hl, bc
	ld	(hl), 48
	inc	bc
	ld	(ix - 75), bc
	ld	hl, (ix - 114)
	inc	hl
	ld	(ix - 114), hl
	jr	BB0_322
BB0_324:
	lea	hl, iy
	ld	de, (ix - 75)
	add	hl, de
	ld	(hl), 46
	ex	de, hl
	ld	de, -134
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	ld	iy, (ix - 108)
	ld	de, (ix - 63)
BB0_325:
	ld	(ix - 63), de
	ld	(ix - 66), hl
	ld	hl, (ix - 78)
	ld	de, (ix - 66)
	add	hl, de
	push	ix
	ld	de, -134
	add	ix, de
	ld	(ix), hl
	pop	ix
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 10
	push	hl
	push	bc
	pop	hl
	ld	(ix - 108), iy
	lea	de, iy
	push	bc
	pop	iy
	ld	bc, (ix - 63)
	call	__lldivu
	ld	(ix - 3), bc
	push	ix
	ld	bc, -131
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	(ix - 123), de
	ld	bc, (ix - 3)
	ld	(ix - 126), bc
	pop	de
	pop	de
	pop	de
	ld	de, (ix - 88)
	ld	d, l
	ld	(ix - 88), de
	mlt	de
	ld	a, iyl
	lea	hl, iy
	sub	a, e
	or	a, 48
	ld	de, -134
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	(iy + 1), a
	ld	iy, 0
	ld	de, 0
	push	de
	push	iy
	ld	de, 10
	push	de
	ld	de, (ix - 108)
	ld	bc, (ix - 63)
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	ccf
	sbc	a, a
	inc	a
	ld	hl, (ix - 66)
	inc	hl
	bit	0, a
	ld	(ix - 3), de
	ld	de, -131
	lea	iy, ix
	push	af
	add	iy, de
	pop	af
	ld	bc, (iy)
	ld	iy, (ix - 123)
	ld	de, (ix - 3)
	ld	de, (ix - 126)
	jp	z, BB0_325
	ex	de, hl
	ld	(ix - 66), de
	inc	de
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB0_328
	ld	iy, 0
	jp	BB0_224
BB0_328:
	ld	hl, (ix - 75)
	ld	de, (ix - 105)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB0_330
	ld	de, 0
BB0_330:
	ld	hl, (ix - 78)
	add	hl, de
	ld	(ix - 108), hl
	ld	bc, (ix - 114)
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	push	bc
	pop	de
	call	pe, __setflag
	ld	b, (ix - 127)
	ld	c, (ix - 128)
	ld	iy, 0
	jp	p, BB0_332
	lea	de, iy
BB0_332:
	ld	hl, 1
	or	a, a
	sbc	hl, de
	ld	de, (ix - 66)
	add	hl, de
	ld	(ix - 63), hl
	ld	(ix - 66), iy
	ld	l, 0
	jp	BB0_213
BB0_333:
	ld	hl, (ix - 57)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI0_0
JTI0_0:
	dl	BB0_42
	dl	BB0_46
	dl	BB0_47
	dl	BB0_58
	dl	BB0_58
	dl	BB0_58
	dl	BB0_54
	dl	BB0_58
	dl	BB0_58
	dl	BB0_55
	private	JTI0_1
JTI0_1:
	dl	BB0_62
	dl	BB0_164
	dl	BB0_296
	dl	BB0_74
	dl	BB0_65
	dl	BB0_74
	dl	BB0_74
	dl	BB0_296
	dl	BB0_74
	dl	BB0_74
	dl	BB0_74
	dl	BB0_74
	dl	BB0_297
	dl	BB0_298
	dl	BB0_299
	dl	BB0_74
	dl	BB0_74
	dl	BB0_300
	dl	BB0_74
	dl	BB0_301
	dl	BB0_74
	dl	BB0_74
	dl	BB0_70
	private	JTI0_2
JTI0_2:
	dl	BB0_134
	dl	BB0_176
	dl	BB0_165
	dl	BB0_168
	dl	BB0_170
	dl	BB0_170
	dl	BB0_170
	dl	BB0_170
	dl	BB0_177
	dl	BB0_178
	dl	BB0_180
	private	JTI0_3
JTI0_3:
	dl	BB0_179
	dl	BB0_244
	dl	BB0_246
	dl	BB0_247
	dl	BB0_248
	dl	BB0_248
	dl	BB0_179
	dl	BB0_179
	private	JTI0_4
JTI0_4:
	dl	BB0_231
	dl	BB0_171
	dl	BB0_227
	dl	BB0_229
	dl	BB0_230
	dl	BB0_230
	dl	BB0_231
	dl	BB0_231
	private	JTI0_5
JTI0_5:
	dl	BB0_257
	dl	BB0_169
	dl	BB0_253
	dl	BB0_254
	dl	BB0_255
	dl	BB0_255
	dl	BB0_256
	dl	BB0_257

	section	.text,"ax",@progbits
	private	_npf_utoa_rev
_npf_utoa_rev:
	ld	hl, -27
	call	__frameset
	ld	hl, (ix + 9)
	ld	(ix - 9), hl
	ld	de, (ix + 12)
	ld	hl, (ix + 15)
	ld	(ix - 6), hl
	ld	iy, 0
	ld	bc, 55
	ld	hl, (ix + 21)
	add	hl, bc
	ld	(ix - 27), hl
	ld	(ix - 3), iy
BB1_1:
	ld	hl, (ix + 6)
	ld	bc, (ix - 3)
	add	hl, bc
	ld	(ix - 24), hl
	push	iy
	push	iy
	ld	hl, (ix + 18)
	push	hl
	ld	hl, (ix - 9)
	ld	(ix - 15), de
	ld	bc, (ix - 6)
	call	__lldivu
	ld	(ix - 12), hl
	pop	hl
	pop	hl
	pop	hl
	push	iy
	push	iy
	ld	hl, (ix + 18)
	push	hl
	ld	hl, (ix - 12)
	ld	(ix - 18), de
	ld	(ix - 21), bc
	call	__llmulu
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 9)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	ld	bc, 10
	or	a, a
	sbc	hl, bc
	ld	hl, 48
	jr	c, BB1_3
	ld	hl, (ix - 27)
BB1_3:
	ld	a, l
	add	a, iyl
	ld	hl, (ix - 24)
	ld	(hl), a
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	iy, 0
	push	iy
	push	iy
	ld	hl, (ix + 18)
	push	hl
	ex	de, hl
	ld	de, (ix - 15)
	ld	bc, (ix - 6)
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 12)
	ld	(ix - 9), hl
	ld	de, (ix - 18)
	ld	hl, (ix - 21)
	ld	(ix - 6), hl
	jp	nc, BB1_1
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__printf_c
__printf_c:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	lea	de, ix + 9
	ld	(ix - 3), de
	ld	de, (ix - 3)
	push	de
	push	hl
	call	_vprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__vsnprintf_c
__vsnprintf_c:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	iy, 0
	lea	bc, ix - 9
	ld	(ix - 9), hl
	ld	(ix - 6), de
	ld	(ix - 3), iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_2
	ld	de, _npf_bufputc
	jr	BB3_3
BB3_2:
	ld	de, _npf_bufputc_nop
BB3_3:
	ld	(ix - 15), de
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	(ix - 18), bc
	push	bc
	push	de
	call	_npf_vpprintf
	ld	(ix - 12), hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 15)
	call	__indcallhl
	pop	hl
	pop	hl
	ld	hl, (ix - 12)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_bufputc
_npf_bufputc:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	ld	bc, (iy + 3)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB4_2
	ld	a, (ix + 6)
	ld	hl, (iy)
	push	de
	pop	bc
	inc	bc
	ld	(iy + 6), bc
	add	hl, de
	ld	(hl), a
BB4_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_bufputc_nop
_npf_bufputc_nop:
	call	__frameset0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__snprintf_c
__snprintf_c:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	lea	hl, ix + 15
	ld	(ix - 3), hl
	ld	hl, (ix - 3)
	push	hl
	push	bc
	push	de
	push	iy
	call	_vsnprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__vsprintf_c
__vsprintf_c:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	scf
	sbc	hl, hl
	push	bc
	push	de
	push	hl
	push	iy
	call	_vsnprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__vprintf_c
__vprintf_c:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, _npf_putc_std
	ld	hl, 0
	push	de
	push	iy
	push	hl
	push	bc
	call	_npf_vpprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_putc_std
_npf_putc_std:
	call	__frameset0
	ld	a, (ix + 6)
	ld	(ix + 6), a
	pop	ix
	jp	_outchar
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__sprintf_c
__sprintf_c:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, -1
	lea	hl, ix + 12
	ld	(ix - 3), hl
	ld	hl, (ix - 3)
	push	hl
	push	de
	push	bc
	push	iy
	call	_vsnprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"NAN", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"FNI", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"ROO", 0

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project 56af4f86925b7eebf23dae240e0a77c64066179e)"
	extern	__Unwind_SjLj_Register
	extern	__llneg
	extern	_outchar
	extern	__inot
	extern	__lcmpzero
	extern	__llcmpzero
	extern	__ishl
	extern	__ladd
	extern	__setflag
	extern	__llshru
	extern	__iand
	extern	__lladd
	extern	_vsnprintf
	extern	__ineg
	extern	__llctlz
	extern	__llmulu
	extern	__lshru
	extern	__frameset
	extern	__indcallhl
	extern	__ior
	extern	__llsub
	extern	_vprintf
	extern	__ishru
	extern	__llcmps
	extern	__llcmpu
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	__lldivs
	extern	__lldivu
	extern	__land
	extern	__llshl
	extern	__lcmpu
	extern	__fcmp
	extern	__frameset0
	extern	__lland
